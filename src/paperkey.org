# -*- coding: utf-8-unix -*-
#+TITLE:     Paperkeyを使った秘密鍵のバックアップ
#+AUTHOR:    斉藤英樹
#+EMAIL:     hideki@hidekisaito.com
#+DESCRIPTION: Emacs Builds prepared by Hideki Saito
#+KEYWORDS: Emacs, software, OSS, compile, build, binaries

#+INCLUDE: analytics.org

#+LANGUAGE:  ja
#+OPTIONS:   H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS: ^:{}
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:h
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+HTML_LINK_UP: index.html
#+HTML_LINK_HOME: index.html
#+XSLT:



* Paperkeyとは
  :PROPERTIES:
  :ID:       c5a79517-69d4-427a-9af8-b2f7a12ee5c7
  :END:

PaperkeyはGnuPGの開発者の一人であるDavid Shaw氏により作成されたOpenPGP秘密鍵バックアップのツールです。これを使うことにより秘密鍵を印刷も可能な比較的短いコードに変換することが可能です。

* 使い方
  :PROPERTIES:
  :ID:       f159a344-1866-4102-a9ec-323f71b7eda7
  :END:

PGPがお使いのシステムに含まれていない場合はPaperkeyのサイトよりダウンロード可能です。（Gpg4winには含まれています。c:\program files\gnu\gpg4win\を確認してください。）

次のようにGnuPGからの秘密鍵出力をpaperkeyにパイプすることで使用できます。

#+BEGIN_SRC sh
gpg –export-secret-key | paperkey
#+END_SRC

出力されるコードは１１行など非常に短いため、これを紙に印刷することにより長期保存も可能になります。
入力の際は、paperkeyにそのコードを渡してやることによりもとの秘密鍵に変換されます。

尚、このツールによって出力される秘密鍵のバックアップは依然として秘密鍵のセキュリティ（パスフレーズなど）で保護されているため、この方法によりバックアップより秘密鍵へのアクセスがパスフレーズなしに行えるようになるといったことはありません。しかし、万が一バックアップが漏洩した場合には念のため、鍵を作りなおすことは要検討であるといえます。

#+INCLUDE: ad.org
